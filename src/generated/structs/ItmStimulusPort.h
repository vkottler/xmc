/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include "../ifgen/common.h"

namespace ARM
{

/**
 * A generic 32-bit container.
 */
struct [[gnu::packed]] ItmStimulusPort
{
    /* Constant attributes. */
    static constexpr std::size_t size =
        4; /*!< ItmStimulusPort's size in bytes. */

    /* Fields. */
    union {
        uint32_t u32;
        uint8_t u8;
        uint16_t u16;
    };

    /* Methods. */

    /**
     * Get u32's FIFOREADY bit.
     *
     * Indicates whether the stimulus port FIFO can accept data.
     */
    inline bool get_u32_FIFOREADY() volatile
    {
        return u32 & (1u << 0u);
    }
};

static_assert(sizeof(ItmStimulusPort) == ItmStimulusPort::size);

static volatile ItmStimulusPort *const DONTUSE1 =
    reinterpret_cast<ItmStimulusPort *>(0x0);

}; // namespace ARM
